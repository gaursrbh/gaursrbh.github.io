<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>DVAPX</title>
 <link href="http://gaursrbh.github.io/atom.xml" rel="self"/>
 <link href="http://gaursrbh.github.io/"/>
 <updated>2014-07-23T09:39:23-04:00</updated>
 <id>http://gaursrbh.github.io</id>
 <author>
   <name>Saurabh Gaur</name>
   <email>srbhgaur@gmail.com</email>
 </author>

 
 <entry>
   <title>D3 Charts From R</title>
   <link href="http://gaursrbh.github.io//2014/07/23/D3-Charts-from-R.html"/>
   <updated>2014-07-23T00:00:00-04:00</updated>
   <id>http://gaursrbh.github.io/2014/07/23/D3-Charts-from-R</id>
   <content type="html">&lt;p&gt;Many attempts have already been made to generate D3 charts from R. Most notably &lt;a href=&quot;http://rcharts.io&quot;&gt;rCharts by Ramnath V&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Still in trying to hide D3 JS intricacies and provide functions to tinker with all chart attributes, rCharts has set a very high goal for itself and rightly so, as it probably aims to cater to R crowd with little experience in JS.&lt;/p&gt;

&lt;p&gt;I believe that in this goal of bridging R and D3, R&amp;#39;s role should be data preparation alone( which it already does well with reshape2, plyr and JSON-related packages). All chart related config and interactive actions should be left to D3.&lt;/p&gt;

&lt;p&gt;The most important aspect is combining the data with D3 and generating charts from R Console. As used in rCharts backend, whisker package is the solution here using moustache templating system.&lt;/p&gt;

&lt;p&gt;I am prosposing the following workflow:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Prepare your D3 templates. One time activity. Get your hands dirty with D3. Chalk out your layout, axes, etc. Bring in the interactivity - tool tips, zooming, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Every time you need to generate the chart, prepare your data in R. Over time, the commands you use could be turned into functions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Combine your data with the template using whisker. Voila! you have your D3 chart&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here&amp;#39;s how it works&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;RCurl&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
source_https &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# parse and evaluate each .R script&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;sapply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;u&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;text &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; getURL&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;u&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; followlocation &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; cainfo &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;system.file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;CurlSSL&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;cacert.pem&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; package &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;RCurl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))),&lt;/span&gt; envir &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.&lt;/span&gt;GlobalEnv&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#Prepare the data&lt;/span&gt;
source_https&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://raw.github.com/gaursrbh/R2D3/master/SunBurst/hcjson.R&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
data&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;iris
cluster&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;hclust&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;dist&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
final&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;toJSON&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;hcjson&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;cluster&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;final&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;datafile.json&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
params&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;jsonpath&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;datafile.json&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#Fetch template and pass the parameters&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;whisker&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#Template prepared beforehand&lt;/span&gt;
template&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;getURL&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://raw.githubusercontent.com/gaursrbh/R2D3/master/SunBurst/template.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;whisker.render&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;template&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; params&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;output.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See output &lt;a href=&quot;http://saurabhgaur.com/static/d3/sunburst/output.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Welcome your comments on Twitter &lt;a href=&quot;https://twitter.com/srbhgaur&quot;&gt;@srbhgaur&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>
